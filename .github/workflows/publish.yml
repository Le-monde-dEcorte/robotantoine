name: Publish
on:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'
jobs:
  npm:
    name: npm
    strategy:
      fail-fast: false
      matrix:
        include:
          - package: '@sleepymaid/util'
            folder: 'util'
          - package: '@sleepymaid/logger'
            folder: 'logger'
          - package: '@sleepymaid/handler'
            folder: 'handler'

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@0865c47f36e68161719c5b124609996bb5c40129 # tag=v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Check previous released version
        id: pre-release
        run: |
          if [[ $(npm view ${{ matrix.package }}@dev version | grep -e "$(jq --raw-output '.version' packages/${{ matrix.folder }}/package.json)\..*-$(git rev-parse --short HEAD)") ]]; \
          then echo '::set-output name=release::false'; \
          else echo '::set-output name=release::true'; fi
      - name: Install dependencies
        if: steps.pre-release.outputs.release == 'true'
        run: yarn
      - name: Build packages
        run: yarn build --filter=${{ matrix.package }}
      - name: Deprecate old versions
        if: steps.pre-release.outputs.release == 'true'
        run: npm deprecate ${{ matrix.package }}@"~$(jq --raw-output '.version' packages/${{ matrix.folder }}/package.json)" "no longer supported" || true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish packages
        if: steps.pre-release.outputs.release == 'true'
        run: |
          yarn workspace ${{ matrix.package }} version $(jq --raw-output '.version' packages/${{ matrix.folder }}/package.json)-$(date +%s)-$(git rev-parse --short HEAD)
          yarn workspace ${{ matrix.package }} npm publish --tag dev || true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
