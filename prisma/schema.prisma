datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:admin@localhost:5432/mondecorte?schema=mondecorte"
}

generator client {
  provider = "prisma-client-js"
}

// TODO: Get rid of this once the new database is in place
model mondecorte {
  user_id        String  @unique
  custom_role_id String?
  points         Int?    @default(0)
  social_credit  Int?    @default(500)
  vote           String?
}

model GuildsSettings {
  guildId        String          @id
  modRoles       ModRole[]
  adminRoles     AdminRole[]
  levelingTracks LevelingTrack[]
}

model ModRole {
  guildId String
  roleId  String @id

  settings GuildsSettings @relation(fields: [guildId], references: [guildId], onDelete: Cascade, onUpdate: NoAction)
}

model AdminRole {
  guildId String
  roleId  String @id

  settings GuildsSettings @relation(fields: [guildId], references: [guildId], onDelete: Cascade, onUpdate: NoAction)
}

model TrackBlacklistedRole {
  guildId String
  trackId Int
  roleId  String @id

  track LevelingTrack @relation(fields: [trackId], references: [trackId], onDelete: Cascade, onUpdate: NoAction)
}

model TrackWhitelistedRole {
  guildId String
  trackId Int
  roleId  String @id

  track LevelingTrack @relation(fields: [trackId], references: [trackId], onDelete: Cascade, onUpdate: NoAction)
}

model TrackRoleMultiplier {
  guildId    String
  trackId    Int
  roleId     String @id
  multiplier Int    @default(1)

  track LevelingTrack @relation(fields: [trackId], references: [trackId], onDelete: Cascade, onUpdate: NoAction)
}

model TrackChannelMultiplier {
  guildId    String
  trackId    Int
  channelId  String @id
  multiplier Int    @default(1)

  track LevelingTrack @relation(fields: [trackId], references: [trackId], onDelete: Cascade, onUpdate: NoAction)
}

model LevelingTrack {
  guildId            String
  trackId            Int                      @id @default(autoincrement())
  trackName          String
  type               LevelingTrackType
  blacklistedRoles   TrackBlacklistedRole[]
  whitelistedRoles   TrackWhitelistedRole[]
  roleMultipliers    TrackRoleMultiplier[]
  channelMultipliers TrackChannelMultiplier[]
  globalMultiplier   Int                      @default(1)

  settings GuildsSettings @relation(fields: [guildId], references: [guildId], onDelete: Cascade, onUpdate: NoAction)
}

enum LevelingTrackType {
  points
  levels
}
